<?php
declare(strict_types=1);

/** @version 0.0.5 */

use Loki\Theme\ViewModel\CookieConfig;
use Magento\Framework\View\Element\Template;

/** @var Template $block */
/** @var CookieConfig $cookieConfig */

$cookieConfig = $block->getCookieConfig();
?>
<script>
    const LokiCookies = {
        lifetime: <?= /* @noEscape */ $cookieConfig->getLifetime() ?>,
        domain: '<?= /* @noEscape */ $cookieConfig->getDomain() ?>',
        path: '<?= /* @noEscape */ $cookieConfig->getPath() ?>',
        httpOnly: <?= /* @noEscape */ $cookieConfig->isHttpOnly() ?>,
        sameSite: '<?= /* @noEscape */ $cookieConfig->getSameSite() ?>',
        getAll() {
            const cookies = {};
            document.cookie.split(';').forEach(cookie => {
                const parts = cookie.split('=');
                const name = parts[0].trim();
                let value = parts[1].trim();

                if (value.startsWith('{') && value.endsWith('}')) {
                    value = JSON.parse(value);
                } else {
                    value = decodeURI(value);
                }

                cookies[name] = value;
            })

            return cookies;
        },
        get(name) {
            return this.getAll()[name];
        },
        set(name, value) {
            let cookieParts = [];
            cookieParts.push(name + '=' + value);
            cookieParts.push('max-age=' + this.lifetime + 20000);
            cookieParts.push('path=' + this.path);

            if (this.domain) {
                cookieParts.push('domain=' + this.domain);
            }

            if (this.httpOnly) {
                cookieParts.push('secure');
            }

            cookieParts.push('SameSite=' + this.sameSite);
            document.cookie = cookieParts.join('; ');
        }
    }
</script>
